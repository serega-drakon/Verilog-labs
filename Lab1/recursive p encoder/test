#! /opt/homebrew/Cellar/icarus-verilog/11.0/bin/vvp
:ivl_version "11.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/11.0/lib/ivl/va_math.vpi";
S_0x13e610480 .scope module, "test_module" "test_module" 2 4;
 .timescale 0 0;
v0x6000014af060_0 .var "inValue", 2 0;
v0x6000014af0f0_0 .net "midVector", 7 0, L_0x6000017a8140;  1 drivers
v0x6000014af180_0 .var "midVectorChanged", 7 0;
v0x6000014af210_0 .net "outValue", 2 0, L_0x600000da8ee0;  1 drivers
E_0x6000028aea30 .event edge, v0x6000014abd50_0;
E_0x6000028ae9d0 .event edge, v0x6000014abde0_0;
S_0x13e60f9e0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 2 18, 2 18 0, S_0x13e610480;
 .timescale 0 0;
v0x6000014ab600_0 .var/i "i", 31 0;
S_0x13e60ef40 .scope module, "decoder1" "decoder" 2 13, 3 1 0, S_0x13e610480;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "inNumber";
    .port_info 1 /OUTPUT 8 "outVector";
L_0x140078010 .functor BUFT 1, C4<00000001>, C4<0>, C4<0>, C4<0>;
v0x6000014ab840_0 .net/2u *"_ivl_0", 7 0, L_0x140078010;  1 drivers
v0x6000014abd50_0 .net "inNumber", 2 0, v0x6000014af060_0;  1 drivers
v0x6000014abde0_0 .net "outVector", 7 0, L_0x6000017a8140;  alias, 1 drivers
L_0x6000017a8140 .shift/l 8, L_0x140078010, v0x6000014af060_0;
S_0x13e60e4a0 .scope module, "p_encoder_rec1" "p_encoder_rec" 2 22, 4 3 0, S_0x13e610480;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "inVector";
    .port_info 1 /OUTPUT 3 "outNumber";
P_0x6000008a9500 .param/l "BIN_SIZE" 0 4 4, +C4<00000000000000000000000000001000>;
P_0x6000008a9540 .param/l "BOUT_SIZE" 0 4 5, +C4<00000000000000000000000000000011>;
v0x6000014aef40_0 .net "inVector", 7 0, v0x6000014af180_0;  1 drivers
v0x6000014aefd0_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
S_0x13e60da00 .scope module, "if_rec_call1" "if_recursive_call" 4 12, 5 1 0, S_0x13e60e4a0;
 .timescale 0 0;
    .port_info 0 /INPUT 8 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a8b00 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a8b40 .param/l "i" 0 5 2, +C4<000000000000000000000000000000111>;
L_0x600000da9260 .functor AND 1, L_0x6000017a9cc0, L_0x6000017a9d60, C4<1>, C4<1>;
v0x6000014ae9a0_0 .net *"_ivl_12", 0 0, L_0x600000da9260;  1 drivers
L_0x140078688 .functor BUFT 1, C4<111>, C4<0>, C4<0>, C4<0>;
v0x6000014aea30_0 .net/2u *"_ivl_13", 2 0, L_0x140078688;  1 drivers
v0x6000014aeac0_0 .net *"_ivl_2", 0 0, L_0x6000017a9cc0;  1 drivers
L_0x140078718 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014aeb50_0 .net *"_ivl_3", 31 0, L_0x140078718;  1 drivers
L_0x140078640 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014aebe0_0 .net/2u *"_ivl_7", 31 0, L_0x140078640;  1 drivers
v0x6000014aec70_0 .net *"_ivl_9", 0 0, L_0x6000017a9d60;  1 drivers
L_0x1400786d0 .functor BUFT 1, C4<000>, C4<0>, C4<0>, C4<0>;
v0x6000014aed00_0 .net "inNumber", 2 0, L_0x1400786d0;  1 drivers
v0x6000014aed90_0 .net "inVector", 7 0, v0x6000014af180_0;  alias, 1 drivers
v0x6000014aee20_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014aeeb0_0 .net "outNumberRec", 2 0, L_0x6000017a9e00;  1 drivers
L_0x6000017a9c20 .part v0x6000014af180_0, 0, 7;
L_0x6000017a9cc0 .part v0x6000014af180_0, 7, 1;
L_0x6000017a9d60 .cmp/eq 32, L_0x140078718, L_0x140078640;
L_0x6000017a9e00 .functor MUXZ 3, L_0x1400786d0, L_0x140078688, L_0x600000da9260, C4<>;
S_0x13e60cf60 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e60da00;
 .timescale 0 0;
S_0x13e60c4c0 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e60cf60;
 .timescale 0 0;
    .port_info 0 /INPUT 7 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9780 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a97c0 .param/l "i" 0 5 2, +C4<0000000000000000000000000000000110>;
L_0x600000da91f0 .functor AND 1, L_0x6000017a99a0, L_0x6000017a9ae0, C4<1>, C4<1>;
v0x6000014ae370_0 .net *"_ivl_12", 0 0, L_0x600000da91f0;  1 drivers
L_0x1400785f8 .functor BUFT 1, C4<110>, C4<0>, C4<0>, C4<0>;
v0x6000014ae400_0 .net/2u *"_ivl_13", 2 0, L_0x1400785f8;  1 drivers
v0x6000014ae490_0 .net *"_ivl_2", 0 0, L_0x6000017a99a0;  1 drivers
v0x6000014ae520_0 .net *"_ivl_3", 31 0, L_0x6000017a9a40;  1 drivers
L_0x140078568 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ae5b0_0 .net *"_ivl_6", 28 0, L_0x140078568;  1 drivers
L_0x1400785b0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ae640_0 .net/2u *"_ivl_7", 31 0, L_0x1400785b0;  1 drivers
v0x6000014ae6d0_0 .net *"_ivl_9", 0 0, L_0x6000017a9ae0;  1 drivers
v0x6000014ae760_0 .net "inNumber", 2 0, L_0x6000017a9e00;  alias, 1 drivers
v0x6000014ae7f0_0 .net "inVector", 6 0, L_0x6000017a9c20;  1 drivers
v0x6000014ae880_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014ae910_0 .net "outNumberRec", 2 0, L_0x6000017a9b80;  1 drivers
L_0x6000017a9900 .part L_0x6000017a9c20, 0, 6;
L_0x6000017a99a0 .part L_0x6000017a9c20, 6, 1;
L_0x6000017a9a40 .concat [ 3 29 0 0], L_0x6000017a9e00, L_0x140078568;
L_0x6000017a9ae0 .cmp/eq 32, L_0x6000017a9a40, L_0x1400785b0;
L_0x6000017a9b80 .functor MUXZ 3, L_0x6000017a9e00, L_0x1400785f8, L_0x600000da91f0, C4<>;
S_0x13e60bb30 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e60c4c0;
 .timescale 0 0;
S_0x13e6047f0 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e60bb30;
 .timescale 0 0;
    .port_info 0 /INPUT 6 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9800 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a9840 .param/l "i" 0 5 2, +C4<00000000000000000000000000000000101>;
L_0x600000da9180 .functor AND 1, L_0x6000017a9680, L_0x6000017a97c0, C4<1>, C4<1>;
v0x6000014add40_0 .net *"_ivl_12", 0 0, L_0x600000da9180;  1 drivers
L_0x140078520 .functor BUFT 1, C4<101>, C4<0>, C4<0>, C4<0>;
v0x6000014addd0_0 .net/2u *"_ivl_13", 2 0, L_0x140078520;  1 drivers
v0x6000014ade60_0 .net *"_ivl_2", 0 0, L_0x6000017a9680;  1 drivers
v0x6000014adef0_0 .net *"_ivl_3", 31 0, L_0x6000017a9720;  1 drivers
L_0x140078490 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014adf80_0 .net *"_ivl_6", 28 0, L_0x140078490;  1 drivers
L_0x1400784d8 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ae010_0 .net/2u *"_ivl_7", 31 0, L_0x1400784d8;  1 drivers
v0x6000014ae0a0_0 .net *"_ivl_9", 0 0, L_0x6000017a97c0;  1 drivers
v0x6000014ae130_0 .net "inNumber", 2 0, L_0x6000017a9b80;  alias, 1 drivers
v0x6000014ae1c0_0 .net "inVector", 5 0, L_0x6000017a9900;  1 drivers
v0x6000014ae250_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014ae2e0_0 .net "outNumberRec", 2 0, L_0x6000017a9860;  1 drivers
L_0x6000017a95e0 .part L_0x6000017a9900, 0, 5;
L_0x6000017a9680 .part L_0x6000017a9900, 5, 1;
L_0x6000017a9720 .concat [ 3 29 0 0], L_0x6000017a9b80, L_0x140078490;
L_0x6000017a97c0 .cmp/eq 32, L_0x6000017a9720, L_0x1400784d8;
L_0x6000017a9860 .functor MUXZ 3, L_0x6000017a9b80, L_0x140078520, L_0x600000da9180, C4<>;
S_0x13e604960 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e6047f0;
 .timescale 0 0;
S_0x13e604fd0 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e604960;
 .timescale 0 0;
    .port_info 0 /INPUT 5 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9880 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a98c0 .param/l "i" 0 5 2, +C4<000000000000000000000000000000000100>;
L_0x600000da9110 .functor AND 1, L_0x6000017a9360, L_0x6000017a94a0, C4<1>, C4<1>;
v0x6000014ad710_0 .net *"_ivl_12", 0 0, L_0x600000da9110;  1 drivers
L_0x140078448 .functor BUFT 1, C4<100>, C4<0>, C4<0>, C4<0>;
v0x6000014ad7a0_0 .net/2u *"_ivl_13", 2 0, L_0x140078448;  1 drivers
v0x6000014ad830_0 .net *"_ivl_2", 0 0, L_0x6000017a9360;  1 drivers
v0x6000014ad8c0_0 .net *"_ivl_3", 31 0, L_0x6000017a9400;  1 drivers
L_0x1400783b8 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ad950_0 .net *"_ivl_6", 28 0, L_0x1400783b8;  1 drivers
L_0x140078400 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ad9e0_0 .net/2u *"_ivl_7", 31 0, L_0x140078400;  1 drivers
v0x6000014ada70_0 .net *"_ivl_9", 0 0, L_0x6000017a94a0;  1 drivers
v0x6000014adb00_0 .net "inNumber", 2 0, L_0x6000017a9860;  alias, 1 drivers
v0x6000014adb90_0 .net "inVector", 4 0, L_0x6000017a95e0;  1 drivers
v0x6000014adc20_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014adcb0_0 .net "outNumberRec", 2 0, L_0x6000017a9540;  1 drivers
L_0x6000017a92c0 .part L_0x6000017a95e0, 0, 4;
L_0x6000017a9360 .part L_0x6000017a95e0, 4, 1;
L_0x6000017a9400 .concat [ 3 29 0 0], L_0x6000017a9860, L_0x1400783b8;
L_0x6000017a94a0 .cmp/eq 32, L_0x6000017a9400, L_0x140078400;
L_0x6000017a9540 .functor MUXZ 3, L_0x6000017a9860, L_0x140078448, L_0x600000da9110, C4<>;
S_0x13e605140 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e604fd0;
 .timescale 0 0;
S_0x13e6052b0 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e605140;
 .timescale 0 0;
    .port_info 0 /INPUT 4 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9900 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a9940 .param/l "i" 0 5 2, +C4<0000000000000000000000000000000000011>;
L_0x600000da90a0 .functor AND 1, L_0x6000017a9040, L_0x6000017a9180, C4<1>, C4<1>;
v0x6000014ad0e0_0 .net *"_ivl_12", 0 0, L_0x600000da90a0;  1 drivers
L_0x140078370 .functor BUFT 1, C4<011>, C4<0>, C4<0>, C4<0>;
v0x6000014ad170_0 .net/2u *"_ivl_13", 2 0, L_0x140078370;  1 drivers
v0x6000014ad200_0 .net *"_ivl_2", 0 0, L_0x6000017a9040;  1 drivers
v0x6000014ad290_0 .net *"_ivl_3", 31 0, L_0x6000017a90e0;  1 drivers
L_0x1400782e0 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ad320_0 .net *"_ivl_6", 28 0, L_0x1400782e0;  1 drivers
L_0x140078328 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ad3b0_0 .net/2u *"_ivl_7", 31 0, L_0x140078328;  1 drivers
v0x6000014ad440_0 .net *"_ivl_9", 0 0, L_0x6000017a9180;  1 drivers
v0x6000014ad4d0_0 .net "inNumber", 2 0, L_0x6000017a9540;  alias, 1 drivers
v0x6000014ad560_0 .net "inVector", 3 0, L_0x6000017a92c0;  1 drivers
v0x6000014ad5f0_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014ad680_0 .net "outNumberRec", 2 0, L_0x6000017a9220;  1 drivers
L_0x6000017a8fa0 .part L_0x6000017a92c0, 0, 3;
L_0x6000017a9040 .part L_0x6000017a92c0, 3, 1;
L_0x6000017a90e0 .concat [ 3 29 0 0], L_0x6000017a9540, L_0x1400782e0;
L_0x6000017a9180 .cmp/eq 32, L_0x6000017a90e0, L_0x140078328;
L_0x6000017a9220 .functor MUXZ 3, L_0x6000017a9540, L_0x140078370, L_0x600000da90a0, C4<>;
S_0x13e605420 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e6052b0;
 .timescale 0 0;
S_0x13e605590 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e605420;
 .timescale 0 0;
    .port_info 0 /INPUT 3 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9980 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a99c0 .param/l "i" 0 5 2, +C4<00000000000000000000000000000000000010>;
L_0x600000da9030 .functor AND 1, L_0x6000017a8d20, L_0x6000017a8e60, C4<1>, C4<1>;
v0x6000014acab0_0 .net *"_ivl_12", 0 0, L_0x600000da9030;  1 drivers
L_0x140078298 .functor BUFT 1, C4<010>, C4<0>, C4<0>, C4<0>;
v0x6000014acb40_0 .net/2u *"_ivl_13", 2 0, L_0x140078298;  1 drivers
v0x6000014acbd0_0 .net *"_ivl_2", 0 0, L_0x6000017a8d20;  1 drivers
v0x6000014acc60_0 .net *"_ivl_3", 31 0, L_0x6000017a8dc0;  1 drivers
L_0x140078208 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014accf0_0 .net *"_ivl_6", 28 0, L_0x140078208;  1 drivers
L_0x140078250 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014acd80_0 .net/2u *"_ivl_7", 31 0, L_0x140078250;  1 drivers
v0x6000014ace10_0 .net *"_ivl_9", 0 0, L_0x6000017a8e60;  1 drivers
v0x6000014acea0_0 .net "inNumber", 2 0, L_0x6000017a9220;  alias, 1 drivers
v0x6000014acf30_0 .net "inVector", 2 0, L_0x6000017a8fa0;  1 drivers
v0x6000014acfc0_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014ad050_0 .net "outNumberRec", 2 0, L_0x6000017a8f00;  1 drivers
L_0x6000017a8c80 .part L_0x6000017a8fa0, 0, 2;
L_0x6000017a8d20 .part L_0x6000017a8fa0, 2, 1;
L_0x6000017a8dc0 .concat [ 3 29 0 0], L_0x6000017a9220, L_0x140078208;
L_0x6000017a8e60 .cmp/eq 32, L_0x6000017a8dc0, L_0x140078250;
L_0x6000017a8f00 .functor MUXZ 3, L_0x6000017a9220, L_0x140078298, L_0x600000da9030, C4<>;
S_0x13e605700 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e605590;
 .timescale 0 0;
S_0x13e611140 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e605700;
 .timescale 0 0;
    .port_info 0 /INPUT 2 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9a00 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a9a40 .param/l "i" 0 5 2, +C4<000000000000000000000000000000000000001>;
L_0x600000da8fc0 .functor AND 1, L_0x6000017a8a00, L_0x6000017a8b40, C4<1>, C4<1>;
v0x6000014ac480_0 .net *"_ivl_12", 0 0, L_0x600000da8fc0;  1 drivers
L_0x1400781c0 .functor BUFT 1, C4<001>, C4<0>, C4<0>, C4<0>;
v0x6000014ac510_0 .net/2u *"_ivl_13", 2 0, L_0x1400781c0;  1 drivers
v0x6000014ac5a0_0 .net *"_ivl_2", 0 0, L_0x6000017a8a00;  1 drivers
v0x6000014ac630_0 .net *"_ivl_3", 31 0, L_0x6000017a8aa0;  1 drivers
L_0x140078130 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ac6c0_0 .net *"_ivl_6", 28 0, L_0x140078130;  1 drivers
L_0x140078178 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ac750_0 .net/2u *"_ivl_7", 31 0, L_0x140078178;  1 drivers
v0x6000014ac7e0_0 .net *"_ivl_9", 0 0, L_0x6000017a8b40;  1 drivers
v0x6000014ac870_0 .net "inNumber", 2 0, L_0x6000017a8f00;  alias, 1 drivers
v0x6000014ac900_0 .net "inVector", 1 0, L_0x6000017a8c80;  1 drivers
v0x6000014ac990_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014aca20_0 .net "outNumberRec", 2 0, L_0x6000017a8be0;  1 drivers
L_0x6000017a8960 .part L_0x6000017a8c80, 0, 1;
L_0x6000017a8a00 .part L_0x6000017a8c80, 1, 1;
L_0x6000017a8aa0 .concat [ 3 29 0 0], L_0x6000017a8f00, L_0x140078130;
L_0x6000017a8b40 .cmp/eq 32, L_0x6000017a8aa0, L_0x140078178;
L_0x6000017a8be0 .functor MUXZ 3, L_0x6000017a8f00, L_0x1400781c0, L_0x600000da8fc0, C4<>;
S_0x13e6112b0 .scope generate, "induction_step" "induction_step" 5 15, 5 15 0, S_0x13e611140;
 .timescale 0 0;
S_0x13e611420 .scope module, "if_rec" "if_recursive_call" 5 17, 5 1 0, S_0x13e6112b0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "inVector";
    .port_info 1 /INPUT 3 "inNumber";
    .port_info 2 /OUTPUT 3 "outNumberRec";
    .port_info 3 /OUTPUT 3 "outNumber";
P_0x6000008a9a80 .param/l "BOUT_SIZE" 0 5 3, +C4<00000000000000000000000000000011>;
P_0x6000008a9ac0 .param/l "i" 0 5 2, +C4<0000000000000000000000000000000000000000>;
L_0x600000da8f50 .functor AND 1, L_0x6000017a8960, L_0x6000017a8820, C4<1>, C4<1>;
v0x6000014abe70_0 .net *"_ivl_0", 31 0, L_0x6000017a8780;  1 drivers
L_0x1400780e8 .functor BUFT 1, C4<000>, C4<0>, C4<0>, C4<0>;
v0x6000014abf00_0 .net/2u *"_ivl_10", 2 0, L_0x1400780e8;  1 drivers
L_0x140078058 .functor BUFT 1, C4<00000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ac000_0 .net *"_ivl_3", 28 0, L_0x140078058;  1 drivers
L_0x1400780a0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0x6000014ac090_0 .net/2u *"_ivl_4", 31 0, L_0x1400780a0;  1 drivers
v0x6000014ac120_0 .net *"_ivl_6", 0 0, L_0x6000017a8820;  1 drivers
v0x6000014ac1b0_0 .net *"_ivl_9", 0 0, L_0x600000da8f50;  1 drivers
v0x6000014ac240_0 .net "inNumber", 2 0, L_0x6000017a8be0;  alias, 1 drivers
v0x6000014ac2d0_0 .net "inVector", 0 0, L_0x6000017a8960;  1 drivers
v0x6000014ac360_0 .net "outNumber", 2 0, L_0x600000da8ee0;  alias, 1 drivers
v0x6000014ac3f0_0 .net "outNumberRec", 2 0, L_0x6000017a88c0;  1 drivers
L_0x6000017a8780 .concat [ 3 29 0 0], L_0x6000017a8be0, L_0x140078058;
L_0x6000017a8820 .cmp/eq 32, L_0x6000017a8780, L_0x1400780a0;
L_0x6000017a88c0 .functor MUXZ 3, L_0x6000017a8be0, L_0x1400780e8, L_0x600000da8f50, C4<>;
S_0x13e611590 .scope generate, "induction_base" "induction_base" 5 15, 5 15 0, S_0x13e611420;
 .timescale 0 0;
L_0x600000da8ee0 .functor BUFZ 3, L_0x6000017a88c0, C4<000>, C4<000>, C4<000>;
    .scope S_0x13e610480;
T_0 ;
    %wait E_0x6000028ae9d0;
    %load/vec4 v0x6000014af0f0_0;
    %store/vec4 v0x6000014af180_0, 0, 8;
    %fork t_1, S_0x13e60f9e0;
    %jmp t_0;
    .scope S_0x13e60f9e0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x6000014ab600_0, 0, 32;
T_0.0 ;
    %load/vec4 v0x6000014ab600_0;
    %load/vec4 v0x6000014af060_0;
    %pad/u 32;
    %cmp/u;
    %jmp/0xz T_0.1, 5;
    %load/vec4 v0x6000014af180_0;
    %pushi/vec4 1, 0, 8;
    %load/vec4 v0x6000014ab600_0;
    %ix/vec4 4;
    %shiftl 4;
    %or;
    %store/vec4 v0x6000014af180_0, 0, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x6000014ab600_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %store/vec4 v0x6000014ab600_0, 0, 32;
    %jmp T_0.0;
T_0.1 ;
    %end;
    .scope S_0x13e610480;
t_0 %join;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x13e610480;
T_1 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v0x6000014af060_0, 0, 3;
    %end;
    .thread T_1;
    .scope S_0x13e610480;
T_2 ;
    %wait E_0x6000028aea30;
    %delay 5, 0;
    %load/vec4 v0x6000014af060_0;
    %load/vec4 v0x6000014af210_0;
    %cmp/e;
    %jmp/0xz  T_2.0, 4;
    %vpi_call 2 32 "$display", "Success!" {0 0 0};
    %jmp T_2.1;
T_2.0 ;
    %vpi_call 2 34 "$display", "Jopa!", " ", v0x6000014af060_0, " ", v0x6000014af210_0 {0 0 0};
T_2.1 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0x13e610480;
T_3 ;
    %delay 10, 0;
    %load/vec4 v0x6000014af060_0;
    %addi 1, 0, 3;
    %store/vec4 v0x6000014af060_0, 0, 3;
    %jmp T_3;
    .thread T_3;
    .scope S_0x13e610480;
T_4 ;
    %vpi_call 2 44 "$monitor", v0x6000014af060_0, " ", v0x6000014af0f0_0, " ", v0x6000014af210_0 {0 0 0};
    %end;
    .thread T_4;
    .scope S_0x13e610480;
T_5 ;
    %delay 300, 0;
    %vpi_call 2 47 "$finish" {0 0 0};
    %end;
    .thread T_5;
    .scope S_0x13e610480;
T_6 ;
    %vpi_call 2 50 "$dumpfile", "test.vcd" {0 0 0};
    %vpi_call 2 51 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x13e610480 {0 0 0};
    %end;
    .thread T_6;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "test.v";
    "./../decoder/decoder.v";
    "./p_encoder_rec.v";
    "./if_recursive_call.v";
