$date
	Wed May  3 21:50:35 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_module $end
$var wire 3 ! outValue [2:0] $end
$var wire 8 " midVector [7:0] $end
$var reg 3 # inValue [2:0] $end
$scope module decoder1 $end
$var wire 3 $ inNumber [2:0] $end
$var wire 8 % outVector [7:0] $end
$upscope $end
$scope module logarithm1 $end
$var wire 8 & inVector [7:0] $end
$var reg 3 ' outNumber [2:0] $end
$var integer 32 ( i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 (
b0 '
b1 &
b1 %
b0 $
b0 #
b1 "
b0 !
$end
#10
b1 (
b1 !
b1 '
b10 "
b10 %
b10 &
b1 #
b1 $
#20
b10 (
b10 !
b10 '
b100 "
b100 %
b100 &
b10 #
b10 $
#30
b11 (
b11 !
b11 '
b1000 "
b1000 %
b1000 &
b11 #
b11 $
#40
b100 (
b100 !
b100 '
b10000 "
b10000 %
b10000 &
b100 #
b100 $
#50
b101 (
b101 !
b101 '
b100000 "
b100000 %
b100000 &
b101 #
b101 $
#60
b110 (
b110 !
b110 '
b1000000 "
b1000000 %
b1000000 &
b110 #
b110 $
#70
b111 (
b111 !
b111 '
b10000000 "
b10000000 %
b10000000 &
b111 #
b111 $
#80
b0 (
b0 !
b0 '
b1 "
b1 %
b1 &
b0 #
b0 $
#90
b1 (
b1 !
b1 '
b10 "
b10 %
b10 &
b1 #
b1 $
#100
b10 (
b10 !
b10 '
b100 "
b100 %
b100 &
b10 #
b10 $
#110
b11 (
b11 !
b11 '
b1000 "
b1000 %
b1000 &
b11 #
b11 $
#120
b100 (
b100 !
b100 '
b10000 "
b10000 %
b10000 &
b100 #
b100 $
#130
b101 (
b101 !
b101 '
b100000 "
b100000 %
b100000 &
b101 #
b101 $
#140
b110 (
b110 !
b110 '
b1000000 "
b1000000 %
b1000000 &
b110 #
b110 $
#150
b111 (
b111 !
b111 '
b10000000 "
b10000000 %
b10000000 &
b111 #
b111 $
#160
b0 (
b0 !
b0 '
b1 "
b1 %
b1 &
b0 #
b0 $
#170
b1 (
b1 !
b1 '
b10 "
b10 %
b10 &
b1 #
b1 $
#180
b10 (
b10 !
b10 '
b100 "
b100 %
b100 &
b10 #
b10 $
#190
b11 (
b11 !
b11 '
b1000 "
b1000 %
b1000 &
b11 #
b11 $
#200
b100 (
b100 !
b100 '
b10000 "
b10000 %
b10000 &
b100 #
b100 $
#210
b101 (
b101 !
b101 '
b100000 "
b100000 %
b100000 &
b101 #
b101 $
#220
b110 (
b110 !
b110 '
b1000000 "
b1000000 %
b1000000 &
b110 #
b110 $
#230
b111 (
b111 !
b111 '
b10000000 "
b10000000 %
b10000000 &
b111 #
b111 $
#240
b0 (
b0 !
b0 '
b1 "
b1 %
b1 &
b0 #
b0 $
#250
b1 (
b1 !
b1 '
b10 "
b10 %
b10 &
b1 #
b1 $
#260
b10 (
b10 !
b10 '
b100 "
b100 %
b100 &
b10 #
b10 $
#270
b11 (
b11 !
b11 '
b1000 "
b1000 %
b1000 &
b11 #
b11 $
#280
b100 (
b100 !
b100 '
b10000 "
b10000 %
b10000 &
b100 #
b100 $
#290
b101 (
b101 !
b101 '
b100000 "
b100000 %
b100000 &
b101 #
b101 $
#300
b110 (
b110 !
b110 '
b1000000 "
b1000000 %
b1000000 &
b110 #
b110 $
